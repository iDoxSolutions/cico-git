<?xml version="1.0"?>

<!-- For more information on using web.config transformation visit http://go.microsoft.com/fwlink/?LinkId=125889 -->

<configuration xmlns:xdt="http://schemas.microsoft.com/XML-Document-Transform">
  <!--
    In the example below, the "SetAttributes" transform will change the value of 
    "connectionString" to use "ReleaseSQLServer" only when the "Match" locator 
    finds an atrribute "name" that has a value of "MyDB".
  -->  
    <connectionStrings>
      <add name="Cico.Models.CicoContext" 
        connectionString="Data Source=(local)\sqlexpress;Initial Catalog=cicodb;Integrated Security=false;uid=sa;pwd=26rtYsxGL;MultipleActiveResultSets=True" 
        xdt:Transform="SetAttributes" xdt:Locator="Match(name)"/>
    </connectionStrings>

  <system.net xdt:Transform="Replace">
    <defaultProxy useDefaultCredentials="true"></defaultProxy>
    <mailSettings>
      <smtp  >
        <network host="smtp.gmail.com" port="587" userName="pawel@system-synergy.com" password="26rtYsxGL" enableSsl="true" />
        
      </smtp>
    </mailSettings>
  </system.net>

  <system.web>
    <compilation xdt:Transform="RemoveAttributes(debug)" />
    <!--
      In the example below, the "Replace" transform will replace the entire 
      <customErrors> section of your web.config file.
      Note that because there is only one customErrors section under the 
      <system.web> node, there is no need to use the "xdt:Locator" attribute.
      
      <customErrors defaultRedirect="GenericError.htm"
        mode="RemoteOnly" xdt:Transform="Replace">
        <error statusCode="500" redirect="InternalError.htm"/>
      </customErrors>
    -->
  </system.web>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework">
      <parameters>
        <parameter value="Data Source=(localdb)\v11.0; Integrated Security=True; MultipleActiveResultSets=True" />
      </parameters>
    </defaultConnectionFactory>
    <contexts >
      <context type="Cico.Models.CicoContext,CICO">
        <databaseInitializer type="System.Data.Entity.DropCreateDatabaseAlways`1[
[Cico.Models.CicoContext,CICO]], EntityFramework">

        </databaseInitializer>
      </context>
    </contexts>
  </entityFramework>
</configuration>