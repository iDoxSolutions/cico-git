//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CICO", "EmployeesDependents", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cico.Employee), "Dependent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cico.Dependent), true)]
[assembly: EdmRelationshipAttribute("CICO", "CaseEmployee", "Case", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cico.Case), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cico.Employee))]
[assembly: EdmRelationshipAttribute("CICO", "CaseStep", "Case", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cico.Case), "Step", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cico.Step), true)]
[assembly: EdmRelationshipAttribute("CICO", "DepartmentStaff", "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cico.Department), "Staff", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cico.Staff), true)]
[assembly: EdmRelationshipAttribute("CICO", "CheckListDepartment", "CheckListItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cico.CheckListItem), "Department", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cico.Department), true)]
[assembly: EdmRelationshipAttribute("CICO", "CheckListStep", "CheckListItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cico.CheckListItem), "Step", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cico.Step), true)]
[assembly: EdmRelationshipAttribute("CICO", "CaseDocument", "Case", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Cico.Case), "Document", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Cico.Document), true)]

#endregion

namespace Cico
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CICOContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CICOContainer object using the connection string found in the 'CICOContainer' section of the application configuration file.
        /// </summary>
        public CICOContainer() : base("name=CICOContainer", "CICOContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CICOContainer object.
        /// </summary>
        public CICOContainer(string connectionString) : base(connectionString, "CICOContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CICOContainer object.
        /// </summary>
        public CICOContainer(EntityConnection connection) : base(connection, "CICOContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Dependent> Dependents
        {
            get
            {
                if ((_Dependents == null))
                {
                    _Dependents = base.CreateObjectSet<Dependent>("Dependents");
                }
                return _Dependents;
            }
        }
        private ObjectSet<Dependent> _Dependents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Case> Cases
        {
            get
            {
                if ((_Cases == null))
                {
                    _Cases = base.CreateObjectSet<Case>("Cases");
                }
                return _Cases;
            }
        }
        private ObjectSet<Case> _Cases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Step> Steps
        {
            get
            {
                if ((_Steps == null))
                {
                    _Steps = base.CreateObjectSet<Step>("Steps");
                }
                return _Steps;
            }
        }
        private ObjectSet<Step> _Steps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Department> Departments
        {
            get
            {
                if ((_Departments == null))
                {
                    _Departments = base.CreateObjectSet<Department>("Departments");
                }
                return _Departments;
            }
        }
        private ObjectSet<Department> _Departments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Staff> Staffs
        {
            get
            {
                if ((_Staffs == null))
                {
                    _Staffs = base.CreateObjectSet<Staff>("Staffs");
                }
                return _Staffs;
            }
        }
        private ObjectSet<Staff> _Staffs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CheckListItem> CheckListItems
        {
            get
            {
                if ((_CheckListItems == null))
                {
                    _CheckListItems = base.CreateObjectSet<CheckListItem>("CheckListItems");
                }
                return _CheckListItems;
            }
        }
        private ObjectSet<CheckListItem> _CheckListItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Document> Documents
        {
            get
            {
                if ((_Documents == null))
                {
                    _Documents = base.CreateObjectSet<Document>("Documents");
                }
                return _Documents;
            }
        }
        private ObjectSet<Document> _Documents;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Dependents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDependents(Dependent dependent)
        {
            base.AddObject("Dependents", dependent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCases(Case @case)
        {
            base.AddObject("Cases", @case);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Steps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSteps(Step step)
        {
            base.AddObject("Steps", step);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Departments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepartments(Department department)
        {
            base.AddObject("Departments", department);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Staffs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStaffs(Staff staff)
        {
            base.AddObject("Staffs", staff);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CheckListItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCheckListItems(CheckListItem checkListItem)
        {
            base.AddObject("CheckListItems", checkListItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Documents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocuments(Document document)
        {
            base.AddObject("Documents", document);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CICO", Name="Case")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Case : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Case object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dueDate">Initial value of the DueDate property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static Case CreateCase(global::System.Int32 id, global::System.String dueDate, global::System.String type)
        {
            Case @case = new Case();
            @case.Id = id;
            @case.DueDate = dueDate;
            @case.Type = type;
            return @case;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DueDate
        {
            get
            {
                return _DueDate;
            }
            set
            {
                OnDueDateChanging(value);
                ReportPropertyChanging("DueDate");
                _DueDate = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DueDate");
                OnDueDateChanged();
            }
        }
        private global::System.String _DueDate;
        partial void OnDueDateChanging(global::System.String value);
        partial void OnDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CICO", "CaseEmployee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CICO.CaseEmployee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CICO.CaseEmployee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CICO.CaseEmployee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("CICO.CaseEmployee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CICO", "CaseStep", "Step")]
        public EntityCollection<Step> Steps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Step>("CICO.CaseStep", "Step");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Step>("CICO.CaseStep", "Step", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CICO", "CaseDocument", "Document")]
        public EntityCollection<Document> Documents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Document>("CICO.CaseDocument", "Document");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Document>("CICO.CaseDocument", "Document", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CICO", Name="CheckListItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CheckListItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CheckListItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dueDate">Initial value of the DueDate property.</param>
        public static CheckListItem CreateCheckListItem(global::System.Int32 id, global::System.Int32 type, global::System.String name, global::System.DateTime dueDate)
        {
            CheckListItem checkListItem = new CheckListItem();
            checkListItem.Id = id;
            checkListItem.Type = type;
            checkListItem.Name = name;
            checkListItem.DueDate = dueDate;
            return checkListItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DueDate
        {
            get
            {
                return _DueDate;
            }
            set
            {
                OnDueDateChanging(value);
                ReportPropertyChanging("DueDate");
                _DueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DueDate");
                OnDueDateChanged();
            }
        }
        private global::System.DateTime _DueDate;
        partial void OnDueDateChanging(global::System.DateTime value);
        partial void OnDueDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CICO", "CheckListDepartment", "Department")]
        public EntityCollection<Department> Departments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Department>("CICO.CheckListDepartment", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Department>("CICO.CheckListDepartment", "Department", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CICO", "CheckListStep", "Step")]
        public EntityCollection<Step> Steps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Step>("CICO.CheckListStep", "Step");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Step>("CICO.CheckListStep", "Step", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CICO", Name="Department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Department : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Department object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="contact">Initial value of the Contact property.</param>
        /// <param name="checkListId">Initial value of the CheckListId property.</param>
        public static Department CreateDepartment(global::System.Int32 id, global::System.String name, global::System.String contact, global::System.Int32 checkListId)
        {
            Department department = new Department();
            department.Id = id;
            department.Name = name;
            department.Contact = contact;
            department.CheckListId = checkListId;
            return department;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Contact
        {
            get
            {
                return _Contact;
            }
            set
            {
                OnContactChanging(value);
                ReportPropertyChanging("Contact");
                _Contact = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Contact");
                OnContactChanged();
            }
        }
        private global::System.String _Contact;
        partial void OnContactChanging(global::System.String value);
        partial void OnContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CheckListId
        {
            get
            {
                return _CheckListId;
            }
            set
            {
                OnCheckListIdChanging(value);
                ReportPropertyChanging("CheckListId");
                _CheckListId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckListId");
                OnCheckListIdChanged();
            }
        }
        private global::System.Int32 _CheckListId;
        partial void OnCheckListIdChanging(global::System.Int32 value);
        partial void OnCheckListIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CICO", "DepartmentStaff", "Staff")]
        public EntityCollection<Staff> Staffs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Staff>("CICO.DepartmentStaff", "Staff");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Staff>("CICO.DepartmentStaff", "Staff", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CICO", "CheckListDepartment", "CheckListItem")]
        public CheckListItem CheckList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CheckListItem>("CICO.CheckListDepartment", "CheckListItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CheckListItem>("CICO.CheckListDepartment", "CheckListItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CheckListItem> CheckListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CheckListItem>("CICO.CheckListDepartment", "CheckListItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CheckListItem>("CICO.CheckListDepartment", "CheckListItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CICO", Name="Dependent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Dependent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Dependent object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="employeesEmployeeId">Initial value of the EmployeesEmployeeId property.</param>
        /// <param name="dependentType">Initial value of the DependentType property.</param>
        public static Dependent CreateDependent(global::System.Int32 id, global::System.Int32 employeesEmployeeId, global::System.String dependentType)
        {
            Dependent dependent = new Dependent();
            dependent.Id = id;
            dependent.EmployeesEmployeeId = employeesEmployeeId;
            dependent.DependentType = dependentType;
            return dependent;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeesEmployeeId
        {
            get
            {
                return _EmployeesEmployeeId;
            }
            set
            {
                OnEmployeesEmployeeIdChanging(value);
                ReportPropertyChanging("EmployeesEmployeeId");
                _EmployeesEmployeeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeesEmployeeId");
                OnEmployeesEmployeeIdChanged();
            }
        }
        private global::System.Int32 _EmployeesEmployeeId;
        partial void OnEmployeesEmployeeIdChanging(global::System.Int32 value);
        partial void OnEmployeesEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DependentType
        {
            get
            {
                return _DependentType;
            }
            set
            {
                OnDependentTypeChanging(value);
                ReportPropertyChanging("DependentType");
                _DependentType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DependentType");
                OnDependentTypeChanged();
            }
        }
        private global::System.String _DependentType;
        partial void OnDependentTypeChanging(global::System.String value);
        partial void OnDependentTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CICO", "EmployeesDependents", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CICO.EmployeesDependents", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CICO.EmployeesDependents", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("CICO.EmployeesDependents", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("CICO.EmployeesDependents", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CICO", Name="Document")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Document : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Document object.
        /// </summary>
        /// <param name="documentId">Initial value of the DocumentId property.</param>
        /// <param name="caseId">Initial value of the CaseId property.</param>
        public static Document CreateDocument(global::System.Int32 documentId, global::System.Int32 caseId)
        {
            Document document = new Document();
            document.DocumentId = documentId;
            document.CaseId = caseId;
            return document;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentId
        {
            get
            {
                return _DocumentId;
            }
            set
            {
                if (_DocumentId != value)
                {
                    OnDocumentIdChanging(value);
                    ReportPropertyChanging("DocumentId");
                    _DocumentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DocumentId");
                    OnDocumentIdChanged();
                }
            }
        }
        private global::System.Int32 _DocumentId;
        partial void OnDocumentIdChanging(global::System.Int32 value);
        partial void OnDocumentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocId
        {
            get
            {
                return _DocId;
            }
            set
            {
                OnDocIdChanging(value);
                ReportPropertyChanging("DocId");
                _DocId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocId");
                OnDocIdChanged();
            }
        }
        private global::System.String _DocId;
        partial void OnDocIdChanging(global::System.String value);
        partial void OnDocIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContentType
        {
            get
            {
                return _ContentType;
            }
            set
            {
                OnContentTypeChanging(value);
                ReportPropertyChanging("ContentType");
                _ContentType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContentType");
                OnContentTypeChanged();
            }
        }
        private global::System.String _ContentType;
        partial void OnContentTypeChanging(global::System.String value);
        partial void OnContentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CaseId
        {
            get
            {
                return _CaseId;
            }
            set
            {
                OnCaseIdChanging(value);
                ReportPropertyChanging("CaseId");
                _CaseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CaseId");
                OnCaseIdChanged();
            }
        }
        private global::System.Int32 _CaseId;
        partial void OnCaseIdChanging(global::System.Int32 value);
        partial void OnCaseIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CICO", "CaseDocument", "Case")]
        public Case Case
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Case>("CICO.CaseDocument", "Case").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Case>("CICO.CaseDocument", "Case").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Case> CaseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Case>("CICO.CaseDocument", "Case");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Case>("CICO.CaseDocument", "Case", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CICO", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="employeeId">Initial value of the EmployeeId property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="middleName">Initial value of the MiddleName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="preferredName">Initial value of the PreferredName property.</param>
        /// <param name="dateOfBirth">Initial value of the DateOfBirth property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="nationality">Initial value of the Nationality property.</param>
        /// <param name="homePhone">Initial value of the HomePhone property.</param>
        /// <param name="cellPhone">Initial value of the CellPhone property.</param>
        /// <param name="tourStartDate">Initial value of the TourStartDate property.</param>
        /// <param name="tourEndDate">Initial value of the TourEndDate property.</param>
        /// <param name="agencyOrSection">Initial value of the AgencyOrSection property.</param>
        /// <param name="positionTitle">Initial value of the PositionTitle property.</param>
        /// <param name="homeStreetAddress">Initial value of the HomeStreetAddress property.</param>
        /// <param name="homeStreetAddress2">Initial value of the HomeStreetAddress2 property.</param>
        /// <param name="homeState">Initial value of the HomeState property.</param>
        /// <param name="homeCity">Initial value of the HomeCity property.</param>
        /// <param name="homeZip">Initial value of the HomeZip property.</param>
        /// <param name="agencyEmail">Initial value of the AgencyEmail property.</param>
        /// <param name="personalEmail">Initial value of the PersonalEmail property.</param>
        public static Employee CreateEmployee(global::System.Int32 employeeId, global::System.String lastName, global::System.String middleName, global::System.String firstName, global::System.String preferredName, global::System.String dateOfBirth, global::System.String title, global::System.String nationality, global::System.String homePhone, global::System.String cellPhone, global::System.String tourStartDate, global::System.String tourEndDate, global::System.String agencyOrSection, global::System.String positionTitle, global::System.String homeStreetAddress, global::System.String homeStreetAddress2, global::System.String homeState, global::System.String homeCity, global::System.String homeZip, global::System.String agencyEmail, global::System.String personalEmail)
        {
            Employee employee = new Employee();
            employee.EmployeeId = employeeId;
            employee.LastName = lastName;
            employee.MiddleName = middleName;
            employee.FirstName = firstName;
            employee.PreferredName = preferredName;
            employee.DateOfBirth = dateOfBirth;
            employee.Title = title;
            employee.Nationality = nationality;
            employee.HomePhone = homePhone;
            employee.CellPhone = cellPhone;
            employee.TourStartDate = tourStartDate;
            employee.TourEndDate = tourEndDate;
            employee.AgencyOrSection = agencyOrSection;
            employee.PositionTitle = positionTitle;
            employee.HomeStreetAddress = homeStreetAddress;
            employee.HomeStreetAddress2 = homeStreetAddress2;
            employee.HomeState = homeState;
            employee.HomeCity = homeCity;
            employee.HomeZip = homeZip;
            employee.AgencyEmail = agencyEmail;
            employee.PersonalEmail = personalEmail;
            return employee;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeId
        {
            get
            {
                return _EmployeeId;
            }
            set
            {
                if (_EmployeeId != value)
                {
                    OnEmployeeIdChanging(value);
                    ReportPropertyChanging("EmployeeId");
                    _EmployeeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeId");
                    OnEmployeeIdChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeId;
        partial void OnEmployeeIdChanging(global::System.Int32 value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PreferredName
        {
            get
            {
                return _PreferredName;
            }
            set
            {
                OnPreferredNameChanging(value);
                ReportPropertyChanging("PreferredName");
                _PreferredName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PreferredName");
                OnPreferredNameChanged();
            }
        }
        private global::System.String _PreferredName;
        partial void OnPreferredNameChanging(global::System.String value);
        partial void OnPreferredNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private global::System.String _DateOfBirth;
        partial void OnDateOfBirthChanging(global::System.String value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nationality
        {
            get
            {
                return _Nationality;
            }
            set
            {
                OnNationalityChanging(value);
                ReportPropertyChanging("Nationality");
                _Nationality = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nationality");
                OnNationalityChanged();
            }
        }
        private global::System.String _Nationality;
        partial void OnNationalityChanging(global::System.String value);
        partial void OnNationalityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HomePhone
        {
            get
            {
                return _HomePhone;
            }
            set
            {
                OnHomePhoneChanging(value);
                ReportPropertyChanging("HomePhone");
                _HomePhone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HomePhone");
                OnHomePhoneChanged();
            }
        }
        private global::System.String _HomePhone;
        partial void OnHomePhoneChanging(global::System.String value);
        partial void OnHomePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CellPhone
        {
            get
            {
                return _CellPhone;
            }
            set
            {
                OnCellPhoneChanging(value);
                ReportPropertyChanging("CellPhone");
                _CellPhone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CellPhone");
                OnCellPhoneChanged();
            }
        }
        private global::System.String _CellPhone;
        partial void OnCellPhoneChanging(global::System.String value);
        partial void OnCellPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TourStartDate
        {
            get
            {
                return _TourStartDate;
            }
            set
            {
                OnTourStartDateChanging(value);
                ReportPropertyChanging("TourStartDate");
                _TourStartDate = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TourStartDate");
                OnTourStartDateChanged();
            }
        }
        private global::System.String _TourStartDate;
        partial void OnTourStartDateChanging(global::System.String value);
        partial void OnTourStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TourEndDate
        {
            get
            {
                return _TourEndDate;
            }
            set
            {
                OnTourEndDateChanging(value);
                ReportPropertyChanging("TourEndDate");
                _TourEndDate = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TourEndDate");
                OnTourEndDateChanged();
            }
        }
        private global::System.String _TourEndDate;
        partial void OnTourEndDateChanging(global::System.String value);
        partial void OnTourEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AgencyOrSection
        {
            get
            {
                return _AgencyOrSection;
            }
            set
            {
                OnAgencyOrSectionChanging(value);
                ReportPropertyChanging("AgencyOrSection");
                _AgencyOrSection = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AgencyOrSection");
                OnAgencyOrSectionChanged();
            }
        }
        private global::System.String _AgencyOrSection;
        partial void OnAgencyOrSectionChanging(global::System.String value);
        partial void OnAgencyOrSectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PositionTitle
        {
            get
            {
                return _PositionTitle;
            }
            set
            {
                OnPositionTitleChanging(value);
                ReportPropertyChanging("PositionTitle");
                _PositionTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PositionTitle");
                OnPositionTitleChanged();
            }
        }
        private global::System.String _PositionTitle;
        partial void OnPositionTitleChanging(global::System.String value);
        partial void OnPositionTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HomeStreetAddress
        {
            get
            {
                return _HomeStreetAddress;
            }
            set
            {
                OnHomeStreetAddressChanging(value);
                ReportPropertyChanging("HomeStreetAddress");
                _HomeStreetAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HomeStreetAddress");
                OnHomeStreetAddressChanged();
            }
        }
        private global::System.String _HomeStreetAddress;
        partial void OnHomeStreetAddressChanging(global::System.String value);
        partial void OnHomeStreetAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HomeStreetAddress2
        {
            get
            {
                return _HomeStreetAddress2;
            }
            set
            {
                OnHomeStreetAddress2Changing(value);
                ReportPropertyChanging("HomeStreetAddress2");
                _HomeStreetAddress2 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HomeStreetAddress2");
                OnHomeStreetAddress2Changed();
            }
        }
        private global::System.String _HomeStreetAddress2;
        partial void OnHomeStreetAddress2Changing(global::System.String value);
        partial void OnHomeStreetAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HomeState
        {
            get
            {
                return _HomeState;
            }
            set
            {
                OnHomeStateChanging(value);
                ReportPropertyChanging("HomeState");
                _HomeState = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HomeState");
                OnHomeStateChanged();
            }
        }
        private global::System.String _HomeState;
        partial void OnHomeStateChanging(global::System.String value);
        partial void OnHomeStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HomeCity
        {
            get
            {
                return _HomeCity;
            }
            set
            {
                OnHomeCityChanging(value);
                ReportPropertyChanging("HomeCity");
                _HomeCity = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HomeCity");
                OnHomeCityChanged();
            }
        }
        private global::System.String _HomeCity;
        partial void OnHomeCityChanging(global::System.String value);
        partial void OnHomeCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HomeZip
        {
            get
            {
                return _HomeZip;
            }
            set
            {
                OnHomeZipChanging(value);
                ReportPropertyChanging("HomeZip");
                _HomeZip = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HomeZip");
                OnHomeZipChanged();
            }
        }
        private global::System.String _HomeZip;
        partial void OnHomeZipChanging(global::System.String value);
        partial void OnHomeZipChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AgencyEmail
        {
            get
            {
                return _AgencyEmail;
            }
            set
            {
                OnAgencyEmailChanging(value);
                ReportPropertyChanging("AgencyEmail");
                _AgencyEmail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AgencyEmail");
                OnAgencyEmailChanged();
            }
        }
        private global::System.String _AgencyEmail;
        partial void OnAgencyEmailChanging(global::System.String value);
        partial void OnAgencyEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersonalEmail
        {
            get
            {
                return _PersonalEmail;
            }
            set
            {
                OnPersonalEmailChanging(value);
                ReportPropertyChanging("PersonalEmail");
                _PersonalEmail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PersonalEmail");
                OnPersonalEmailChanged();
            }
        }
        private global::System.String _PersonalEmail;
        partial void OnPersonalEmailChanging(global::System.String value);
        partial void OnPersonalEmailChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CICO", "EmployeesDependents", "Dependent")]
        public EntityCollection<Dependent> Dependents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Dependent>("CICO.EmployeesDependents", "Dependent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Dependent>("CICO.EmployeesDependents", "Dependent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CICO", "CaseEmployee", "Case")]
        public Case Case
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Case>("CICO.CaseEmployee", "Case").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Case>("CICO.CaseEmployee", "Case").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Case> CaseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Case>("CICO.CaseEmployee", "Case");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Case>("CICO.CaseEmployee", "Case", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CICO", Name="Staff")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Staff : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Staff object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="staffId">Initial value of the StaffId property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="departmentId">Initial value of the DepartmentId property.</param>
        public static Staff CreateStaff(global::System.Int32 id, global::System.String staffId, global::System.String email, global::System.Int32 departmentId)
        {
            Staff staff = new Staff();
            staff.Id = id;
            staff.StaffId = staffId;
            staff.Email = email;
            staff.DepartmentId = departmentId;
            return staff;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StaffId
        {
            get
            {
                return _StaffId;
            }
            set
            {
                OnStaffIdChanging(value);
                ReportPropertyChanging("StaffId");
                _StaffId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StaffId");
                OnStaffIdChanged();
            }
        }
        private global::System.String _StaffId;
        partial void OnStaffIdChanging(global::System.String value);
        partial void OnStaffIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DepartmentId
        {
            get
            {
                return _DepartmentId;
            }
            set
            {
                OnDepartmentIdChanging(value);
                ReportPropertyChanging("DepartmentId");
                _DepartmentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DepartmentId");
                OnDepartmentIdChanged();
            }
        }
        private global::System.Int32 _DepartmentId;
        partial void OnDepartmentIdChanging(global::System.Int32 value);
        partial void OnDepartmentIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CICO", "DepartmentStaff", "Department")]
        public Department Department
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("CICO.DepartmentStaff", "Department").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("CICO.DepartmentStaff", "Department").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Department> DepartmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Department>("CICO.DepartmentStaff", "Department");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Department>("CICO.DepartmentStaff", "Department", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CICO", Name="Step")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Step : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Step object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="caseId">Initial value of the CaseId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="department">Initial value of the Department property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="viewable">Initial value of the Viewable property.</param>
        /// <param name="subscriber">Initial value of the Subscriber property.</param>
        /// <param name="checkListId">Initial value of the CheckListId property.</param>
        /// <param name="dueDate">Initial value of the DueDate property.</param>
        public static Step CreateStep(global::System.Int32 id, global::System.String type, global::System.Int32 caseId, global::System.String name, global::System.String description, global::System.String department, global::System.String priority, global::System.String status, global::System.String viewable, global::System.String subscriber, global::System.Int32 checkListId, global::System.String dueDate)
        {
            Step step = new Step();
            step.Id = id;
            step.Type = type;
            step.CaseId = caseId;
            step.Name = name;
            step.Description = description;
            step.Department = department;
            step.Priority = priority;
            step.Status = status;
            step.Viewable = viewable;
            step.Subscriber = subscriber;
            step.CheckListId = checkListId;
            step.DueDate = dueDate;
            return step;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CaseId
        {
            get
            {
                return _CaseId;
            }
            set
            {
                OnCaseIdChanging(value);
                ReportPropertyChanging("CaseId");
                _CaseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CaseId");
                OnCaseIdChanged();
            }
        }
        private global::System.Int32 _CaseId;
        partial void OnCaseIdChanging(global::System.Int32 value);
        partial void OnCaseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Department
        {
            get
            {
                return _Department;
            }
            set
            {
                OnDepartmentChanging(value);
                ReportPropertyChanging("Department");
                _Department = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Department");
                OnDepartmentChanged();
            }
        }
        private global::System.String _Department;
        partial void OnDepartmentChanging(global::System.String value);
        partial void OnDepartmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.String _Priority;
        partial void OnPriorityChanging(global::System.String value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Viewable
        {
            get
            {
                return _Viewable;
            }
            set
            {
                OnViewableChanging(value);
                ReportPropertyChanging("Viewable");
                _Viewable = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Viewable");
                OnViewableChanged();
            }
        }
        private global::System.String _Viewable;
        partial void OnViewableChanging(global::System.String value);
        partial void OnViewableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Subscriber
        {
            get
            {
                return _Subscriber;
            }
            set
            {
                OnSubscriberChanging(value);
                ReportPropertyChanging("Subscriber");
                _Subscriber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Subscriber");
                OnSubscriberChanged();
            }
        }
        private global::System.String _Subscriber;
        partial void OnSubscriberChanging(global::System.String value);
        partial void OnSubscriberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CheckListId
        {
            get
            {
                return _CheckListId;
            }
            set
            {
                OnCheckListIdChanging(value);
                ReportPropertyChanging("CheckListId");
                _CheckListId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckListId");
                OnCheckListIdChanged();
            }
        }
        private global::System.Int32 _CheckListId;
        partial void OnCheckListIdChanging(global::System.Int32 value);
        partial void OnCheckListIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DueDate
        {
            get
            {
                return _DueDate;
            }
            set
            {
                OnDueDateChanging(value);
                ReportPropertyChanging("DueDate");
                _DueDate = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DueDate");
                OnDueDateChanged();
            }
        }
        private global::System.String _DueDate;
        partial void OnDueDateChanging(global::System.String value);
        partial void OnDueDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CICO", "CaseStep", "Case")]
        public Case Case
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Case>("CICO.CaseStep", "Case").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Case>("CICO.CaseStep", "Case").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Case> CaseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Case>("CICO.CaseStep", "Case");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Case>("CICO.CaseStep", "Case", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CICO", "CheckListStep", "CheckListItem")]
        public CheckListItem CheckList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CheckListItem>("CICO.CheckListStep", "CheckListItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CheckListItem>("CICO.CheckListStep", "CheckListItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CheckListItem> CheckListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CheckListItem>("CICO.CheckListStep", "CheckListItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CheckListItem>("CICO.CheckListStep", "CheckListItem", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
