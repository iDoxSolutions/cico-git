@using System.Globalization
@model Cico.Areas.Admin.CheckListsModel
           

<h1>Dashboard</h1>

<style>
    .admin-table th, td {
        padding: 2px 2px 2px 2px;
        margin: 2px 2px 2px 2px;
    }

    .admin-table .numeric {
        text-align: center;
        font-weight: bold;
        cursor: pointer;
    }

    .admin-table .provisional a {
        color: orange;
    }

    .admin-table .complete {
        color: green;
    }

    .admin-table .to-complete {
        color: red;
    }
</style>
<form method="GET">
    <fieldset>
        <table>
            <tr>
                <td><legend>Search for a list</legend>
                    <div>
                        Employee Name:
                    </div>
                    @Html.TextBoxFor(c => c.EmployeeeName)
                    <div>
                        Arrival / Departure Date:
                    </div>
                    @Html.TextBoxFor(c => c.ReceiveDate)</td>
                <td>
                    <div>@Html.LabelFor(c => c.CheckIn)</div>
                    @Html.CheckBoxFor(c => c.CheckIn)
                    <div>@Html.LabelFor(c => c.CheckOut)</div>
                    @Html.CheckBoxFor(c => c.CheckOut)
                </td>
            </tr>
        </table>


        <input type="submit" value="Search" />
    </fieldset>
</form>
<table class="admin-table">
    <tr>
        <th>Employee Name</th>
        <th>User ID</th>
        <th>Date Started</th>
        <th class="numeric">Cmplt</th>
        <th class="numeric">Prov</th>
        <th class="numeric">Not Cmplt</th>
        <th>Active</th>
    </tr>
    @foreach (var c in Model.CheckListModels)
    {
        <tr>
            <td>@Html.ActionLink(c.EmployeeName, "index", "home", new { id = c.Session.Id, area = "" }, null);</td>
            <td>@c.Employee.UserId</td>
            <td>@c.DateCreated</td>
            <td class="numeric complete">@c.ItemsChecked</td>
            <td class="numeric provisional" data-id="@c.Session.Id" data-item-type="provisional"><a href="/admin/checklists/Show?id=@c.Session.Id">@c.ItemsProvision</a></td>
            <td class="numeric to-complete">@c.ItemsLeft</td>
            <td class="numeric to-complete">@c.Session.Completed.CompareTo(false)</td>
        </tr>
        
    }
</table>

<div>
    Page @(Model.CheckListModels.PageCount < Model.CheckListModels.PageNumber ? 0 : Model.CheckListModels.PageNumber)
    of @Model.CheckListModels.PageCount

    @if (Model.CheckListModels.HasPreviousPage)
    {
        @Html.ActionLink("<<", "Index", new { Page = 1 })
        @Html.Raw(" ");
        @Html.ActionLink("< Prev", "Index", new { Page = Model.CheckListModels.PageNumber - 1 })
    }
    else
    {
        @:<<
        @Html.Raw(" ");
        @:< Prev
    }

    @if (Model.CheckListModels.HasNextPage)
    {
        @Html.ActionLink("Next >", "Index", new { Page = Model.CheckListModels.PageNumber + 1 })
        @Html.Raw(" ");
        @Html.ActionLink(">>", "Index", new { Page = Model.CheckListModels.PageCount })
    }
    else
    {
        @:Next >
        @Html.Raw(" ")
        @:>>
    }
</div>


<script type="text/javascript">
    $(function () {
        $("#ReceiveDate").datepicker({});
    });





</script>
