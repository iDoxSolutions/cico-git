@using System.Globalization
@model Cico.Areas.Admin.CheckListsModel
           

<h1>Email Subscriptions</h1>

<style>
    .admin-table th,td{
        padding: 2px 2px 2px 2px;
        margin: 2px 2px 2px 2px
    }
    .admin-table .numeric{
        text-align: center;
        font-weight: bold;
        cursor: pointer;
    }

    .admin-table .provisional a{
        color: orange;
    }
    .admin-table .complete {
        color: green;
    }
    .admin-table .to-complete {
        color: red;
    }
</style>

<table class="admin-table">
    <tr>
        <th>Employee Name</th>
        <th>User ID</th>
        <th>Date Started</th>
        <th>Template Rev.</th>
        <th  class="numeric">Completed</th>
        <th  class="numeric">Provisional</th>
        <th  class="numeric">Not Completed</th>
        <th  >Completed</th>
    </tr>
    @foreach (var c in Model.CheckListModels)
    {
        <tr>
            <td>@Html.ActionLink(c.EmployeeName, "index", "home", new {id=c.Session.Id ,area=""},null);</td>
            <td>@c.Employee.UserId</td>
            <td>@c.DateCreated</td>
            <td>@Html.ActionLink(c.Session.CheckListTemplate.CheckListTemplateId.ToString(CultureInfo.InvariantCulture),"edit","checklistbuilder",new{id=c.Session.CheckListTemplate.CheckListTemplateId},null)</td>
            <td class="numeric complete">@c.ItemsChecked</td>
            <td class="numeric provisional" data-id="@c.Session.Id" data-item-type="provisional"><a href="/admin/checklists/Show?id=@c.Session.Id">@c.ItemsProvision</a></td>
            <td class="numeric to-complete">@c.ItemsLeft</td>
            <td class="numeric to-complete">@c.Session.Completed</td>
        </tr>
        
    }
</table>
<div id="dialog">
    <ul data-bind="foreach:items">
        <li >
            <input style="display: inline" type="checkbox" data-bind="checked:Checked" disabled="disabled" />
            <a style="display: inline" data-bind="text:Description,attr:{href:ItemUrl}"   ></a>
            
        </li>
    </ul>
</div>
<script type="text/javascript">
    function PageModel() {
        var self = this;
        self.items = ko.observableArray([]);
    }

    var model = new PageModel();
    ko.applyBindings(model);

   /* $(".numeric").click(
        function () {
            var id=$(this).attr("data-id");
            $.post("checklist", {id:id},
                function (data) {
                    model.items(data.CheckListItems);
                }
            );
            $("#dialog").dialog();
        }
    );*/
     

    
</script>