@model ItemClassModel
@using Cico.Models.Helpers
<script type="text/javascript" src="/scripts/tiny_mce/tiny_mce.js"></script>
<script type="text/javascript">
    tinyMCE.init({
        mode: "textareas",
        theme: "simple",
        font_sizes_style_values: medium,
        //plugins: "autolink,lists,pagebreak,style,layer,table,save,advhr,advimage,advlink,emotions,iespell,inlinepopups,insertdatetime,preview,media,searchreplace,print,contextmenu,paste,directionality,fullscreen,noneditable,visualchars,nonbreaking,xhtmlxtras,template,wordcount,advlist,autosave,visualblocks",
        //theme_advanced_buttons1: "save,newdocument,|,bold,italic,underline,strikethrough,|,justifyleft,justifycenter,justifyright,justifyfull,styleselect,formatselect,fontselect,fontsizeselect",
        //theme_advanced_buttons2: "cut,copy,paste,pastetext,pasteword,|,search,replace,|,bullist,numlist,|,outdent,indent,blockquote,|,undo,redo,|,link,unlink,anchor,image,cleanup,help,code,|,insertdate,inserttime,preview,|,forecolor,backcolor",
        // theme_advanced_buttons3: "tablecontrols,|,hr,removeformat,visualaid,|,sub,sup,|,charmap,emotions,iespell,media,advhr,|,print,|,ltr,rtl,|,fullscreen",
        //theme_advanced_buttons4: "insertlayer,moveforward,movebackward,absolute,|,styleprops,|,cite,abbr,acronym,del,ins,attribs,|,visualchars,nonbreaking,template,pagebreak,restoredraft,visualblocks",
        theme_advanced_toolbar_location: "top",
        theme_advanced_toolbar_align: "left",
        theme_advanced_statusbar_location: "bottom",
        theme_advanced_resizing: true
    });
</script>

@Html.ValidationSummary()
@using (Html.BeginForm()) {
    <fieldset>
        <legend>Self-Contained Form</legend>
        <div class="editor-label">
            @Html.Label("Select item type:")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(c => c.CheckListItemTemplate.Item, Model.ItemTypes)
        </div>
        
         <div class="editor-label">
            @Html.LabelFor(c => c.CheckListItemTemplate.Description)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(c => c.CheckListItemTemplate.Description)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(c => c.CheckListItemTemplate.Office)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(c => c.SelectedOffice, Model.OfficeList, "")
        </div>
       
         <div class="editor-label">
              @Html.LabelFor(c => c.CheckListItemTemplate.SystemFile)<div class="homescreen-display">*select a custom form from the dropdown to allow employess fill out the form data</div>
          
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(c => c.CheckListItemTemplate.Form, Html.GetDropdownItems("SystemForms"), "")
            </div>
        
         <div class="editor-label">
            @Html.LabelFor(c => c.CheckListItemTemplate.Form)<div class="homescreen-display">*select a template from the dropdown to allow employess to download it</div>
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(c => c.SelectedFile, Model.FileList, "")
        </div>
       @* <div class="editor-label">
            @Html.LabelFor(c=>c.CheckListItemTemplate.Document)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(c=>c.CheckListItemTemplate.Document)
        </div>*@
        
        <div class="editor-label">
            @Html.LabelFor(c => c.CheckListItemTemplate.DueDays) <div class="homescreen-display">*negative is # days befor Key Date, positive is # days after Key Date</div>
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(c => c.CheckListItemTemplate.DueDays)
        </div>
        <div class="editor-label">
            @Html.LabelFor(c => c.CheckListItemTemplate.Provisional)<div class="homescreen-display">*if checked, only a staff member can fully complete the item</div>
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(c => c.CheckListItemTemplate.Provisional)
        </div>
        <div class="editor-label">
            @Html.LabelFor(c => c.CheckListItemTemplate.NotesAccess)<div class="homescreen-display">*if checked, allows users from other departments to view (not edit) notes</div>
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(c => c.CheckListItemTemplate.NotesAccess)
        </div>
         <div class="editor-label">
            @Html.LabelFor(c => c.CheckListItemTemplate.Dependents)<div class="homescreen-display">*if checked, signifies that this item also applies to dependents</div>
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(c => c.CheckListItemTemplate.Dependents)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(c => c.CheckListItemTemplate.CompleteCheckList)<div class="homescreen-display">*if checked, signifies that completing this item will complete the entire checklist</div>
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(c => c.CheckListItemTemplate.CompleteCheckList)
        </div>

        <div class="editor-label">
            @Html.LabelFor(c => c.CheckListItemTemplate.InstructionText)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(c => c.CheckListItemTemplate.InstructionText)
        </div>
        
        
        
        
        <div class="editor-label">
            @Html.LabelFor(c => c.CheckListItemTemplate.ApprovalText)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(c => c.CheckListItemTemplate.ApprovalText)
        </div>

        

        @Html.HiddenFor(c => c.TemplateId)
        @Html.HiddenFor(c => c.CheckListItemTemplate.CheckListItemTemplateId)
    </fieldset>
    <fieldset>
        <legend>Department</legend>
    </fieldset>
        <div id="formPlaceholder">
            

        </div>
        if (Model.Editable) {
         <div class="editor-field">
             <input type="submit" value="Submit" name="Save"/>
         </div>
        }


}