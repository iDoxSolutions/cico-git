@using Cico.Models
@model Cico.Areas.Admin.AccessRightsModel


@{
    ViewBag.Title = "Field Access Rights";
}

<h2>Create</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) 
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Access Rights</legend>
             <div class="editor-label">
                 @Html.LabelFor(model => model.AccessRights.AccessType)
             </div>
             <div class="editor-field">
                @Html.DropDownListFor("", Model.AccessType)
                @Html.ValidationMessageFor(model => model.AccessRights.AccessType)
            </div>
         
            <div class="editor-label">
                @Html.LabelFor(model => model.AccessRights.FieldName)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => Model.SelectedField, Model.Fields)
                @Html.ValidationMessageFor(model => model.AccessRights.FieldName)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.AccessRights.Hide)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.AccessRights.Hide)
                @Html.ValidationMessageFor(model => model.AccessRights.Hide)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.AccessRights.View)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.AccessRights.View)
                @Html.ValidationMessageFor(model => model.AccessRights.View)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.AccessRights.Edit)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.AccessRights.Edit)
                @Html.ValidationMessageFor(model => model.AccessRights.Edit)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.SelectedOffice)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.SelectedOffice, Model.Office, "")
                @Html.ValidationMessageFor(model => model.SelectedOffice)
            </div>
        
        <input type="submit" value="Save" name="Save" />
        
    </fieldset>
    
}

<div>
   
    @Html.ActionLink("Back to List", "Index")
</div>
