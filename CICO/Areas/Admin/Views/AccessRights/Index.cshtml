@{
    ViewBag.Title = "Index3";
}

<style>
    #access-rights th {
        height: 30px;
        text-align: center;
        width: 40px;
    }

    #access-rights .access-rule {
        border: 2px;
        cursor: pointer;
        font-weight: bold;
        height: 30px;
        padding: 2px;
        text-align: center;
        width: 40px;
    }

    #access-rights .line-header {
        border: 2px;
        font-weight: bold;
        height: 30px;
        padding: 2px;
        text-align: left;
        width: 120px;
    }

    #access-rights .access-rule-hide {
        background-color: #9adfe6;
        height: 30px;
        width: 30px;
    }

    #access-rights .access-rule-view {
        background-color: #ffffcc;
        height: 30px;
        width: 30px;
    }

    #access-rights .access-rule-edit {
        background-color: #ccffdc;
        height: 30px;
        width: 30px;
    }
</style>
<h2>Field Access Rights</h2>

    
 <div >
    
    <div><input style="width:30px;" type="radio" name="dmpDep"  value="Employee" data-bind="checked: selectedEmpDep" /> Employee</div>
    <div><input style="width:30px;" type="radio" name="dmpDep" value="Dependent" data-bind="checked: selectedEmpDep" /> Dependent</div>
 
</div>

<table id="access-rights">
    <thead>
        <tr data-bind="foreach: headerItems">
            <th data-bind="text:$data"></th>
        </tr>
    </thead>
    <tbody data-bind="foreach: rows">
        <tr data-bind="foreach: $data">
            <td data-bind="text: text, click: click, css: cssClass(text)"></td>
        </tr>
    </tbody>
   
</table>


<script>

    function HeaderModel(field) {
        var self = this;
        self.text = field.fieldName;
        self.click = function() {};
        self.cssClass = function() { return 'line-header'; };
    }

    function CellModel(accessRights, field, office,empDep) {
        var self = this;
        self.office = office;
        self.field = field;
        self.click = function(arg) {
            if (!arg.accessRecord) return;

            switch (arg.text()) {
            case 'H':
                arg.text('V');
                break;
            case 'V':
                arg.text('E');
                break;
            case 'E':
                arg.text('H');
                break;
            }

            $.ajax({
                url: "AccessRights/Set",
                type: 'POST',
                data: {
                    officeId: arg.office.officeId,
                    fieldId: arg.field.fieldId,
                    access: arg.text(),
                    empDep:empDep
                }
            }).done(function(data) {

            });
        };
        self.text = ko.observable('H');

        self.cssClass =
            function(access) {
                switch (access()) {
                case 'H':
                    return 'access-rule access-rule-hide';
                case 'V':
                    return 'access-rule access-rule-view';
                case 'E':
                    return 'access-rule access-rule-edit';
                }
            };
        ko.utils.arrayForEach(accessRights(), function(accessRight) {
            if (accessRight.officeId == office.officeId && accessRight.fieldId == field.fieldId) {
                self.accessRecord = accessRight;
                self.text(accessRight.access);
            }
        });
        if (self.accessRecord == null) {
            self.accessRecord = { officeId: office.officeId, fieldId: field.fieldId, access: 'H' };
        }


    }

    function AccessRightsModel() {
        var self = this;
        self.fields =  ko.observableArray();
        self.offices =ko.observableArray();
        self.rights = ko.observableArray();
        self.selectedEmpDep = ko.observable('Employee');
        self.empDemp = ["Employee", "Dependent"];
        self.headerItems = ko.computed(function() {
            var cells = [];
            cells.push('');
            ko.utils.arrayForEach(self.offices(), function(office) {
                cells.push(office.officeName);
            });
            return cells;
        });

        self.rows = ko.computed(
            function() {
                var rows = [];
                ko.utils.arrayForEach(self.fields(), function(field) {
                    var cells = [];
                    cells.push(new HeaderModel(field));
                    ko.utils.arrayForEach(self.offices(), function(office) {
                        var cellModel = new CellModel(self.rights, field, office, self.selectedEmpDep());
                        cells.push(cellModel);
                    });
                    rows.push(cells);
                });
                return rows;
            }
        );

        self.load = function(e) {
            $.ajax({
                url: "AccessRights/GetModel",
                type: 'POST',
                data: { empDep: e }
            }).done(function(data) {
                self.offices(data.Offices);
                self.fields(data.Fields);
                self.rights(data.AccessRights);

            });
        };
        self.selectedEmpDep.subscribe(
            function(nval) {
                self.load(nval);
            }
        );

        self.load('Employee');


    }

    var access = new AccessRightsModel();
    ko.applyBindings(access);


</script>