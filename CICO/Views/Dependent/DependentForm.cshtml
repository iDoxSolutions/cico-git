@model Cico.Controllers.DepententModel
@using Cico.Models.Helpers;
    <input type="submit" value="Save" name="Save" />
    @Html.ValidationSummary()
    <fieldset class="two-column-form" style="width: 80%">
        
        @Html.HiddenFor(c=>c.EmployeeId)
        <legend>Information for @Model.Dependent.FirstName @Model.Dependent.LastName</legend>
        <div class="float-left" style="width: 47%">
            
            <div class="editor-label">
                @Html.LabelFor(model => model.Dependent.FirstName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Dependent.FirstName)
                @Html.ValidationMessageFor(model => model.Dependent.FirstName)
                <div class="homescreen-inline-instructions">*As appears on passport</div>
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Dependent.LastName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Dependent.LastName)
                @Html.ValidationMessageFor(model => model.Dependent.LastName)
                <div class="homescreen-inline-instructions">*As appears on passport</div>
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Dependent.DateOfBirth)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Dependent.DateOfBirth)
                @Html.ValidationMessageFor(model => model.Dependent.DateOfBirth)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Dependent.Relationship)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.Dependent.Relationship, Html.GetDropdownItems("Relationship"), "")
                @Html.ValidationMessageFor(model => model.Dependent.Relationship)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Dependent.HomeAddress)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Dependent.HomeAddress)
                @Html.ValidationMessageFor(model => model.Dependent.HomeAddress)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Dependent.HomePhone)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Dependent.HomePhone)
                @Html.ValidationMessageFor(model => model.Dependent.HomePhone)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Dependent.HomePhone2)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Dependent.HomePhone2)
                @Html.ValidationMessageFor(model => model.Dependent.HomePhone2)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Dependent.Nationality)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.Dependent.Nationality, Html.GetDropdownItems("Nations"), "")
                @Html.ValidationMessageFor(model => model.Dependent.Nationality)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Dependent.PassportExpiration)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Dependent.PassportExpiration)
                @Html.ValidationMessageFor(model => model.Dependent.PassportExpiration)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Dependent.PassportNumber)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Dependent.PassportNumber)
                @Html.ValidationMessageFor(model => model.Dependent.PassportNumber)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Dependent.PassportType)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.Dependent.PassportType, Html.GetDropdownItems("PassportType"), "")
                @Html.ValidationMessageFor(model => model.Dependent.PassportType)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Dependent.PersonalEmail)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Dependent.PersonalEmail)
                @Html.ValidationMessageFor(model => model.Dependent.PersonalEmail)
            </div>


        </div>
        <div class="float-right" style="width: 47%">
            <div class="editor-label">
                @Html.LabelFor(model => model.Dependent.PreferredName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Dependent.PreferredName)
                @Html.ValidationMessageFor(model => model.Dependent.PreferredName)
            </div>
           
            <div class="editor-label">
                @Html.LabelFor(model => model.Dependent.SameECData)
            </div>
            <div class="checkbox">
                @Html.EditorFor(model => model.Dependent.SameECData)
                @Html.ValidationMessageFor(model => model.Dependent.SameECData)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Dependent.EmergencyContactEmail)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Dependent.EmergencyContactEmail)
                @Html.ValidationMessageFor(model => model.Dependent.EmergencyContactEmail)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Dependent.EmergencyContactFirstName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Dependent.EmergencyContactFirstName)
                @Html.ValidationMessageFor(model => model.Dependent.EmergencyContactFirstName)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Dependent.EmergencyContactLastName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Dependent.EmergencyContactLastName)
                @Html.ValidationMessageFor(model => model.Dependent.EmergencyContactLastName)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Dependent.EmergencyContactOfficePhone)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Dependent.EmergencyContactOfficePhone)
                @Html.ValidationMessageFor(model => model.Dependent.EmergencyContactOfficePhone)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Dependent.EmergencyContactPhone)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Dependent.EmergencyContactPhone)
                @Html.ValidationMessageFor(model => model.Dependent.EmergencyContactPhone)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Dependent.EmergencyContactPhone2)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Dependent.EmergencyContactPhone2)
                @Html.ValidationMessageFor(model => model.Dependent.EmergencyContactPhone2)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Dependent.EmergencyContactRelationship)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Dependent.EmergencyContactRelationship)
                @Html.ValidationMessageFor(model => model.Dependent.EmergencyContactRelationship)
            </div>
            
            <div class="editor-label">
                @Html.LabelFor(model => model.Dependent.SchoolName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Dependent.SchoolName)
                @Html.ValidationMessageFor(model => model.Dependent.SchoolName)
            </div>

        </div>
        <div style="clear: both"></div>
        
    </fieldset>
    
    <fieldset class="two-column-form" style="width: 80%">
        <legend>After Arrival</legend>
        <h2>To be completed after arrival</h2>
        <div class="float-left" style="width: 47%">
             <div class="editor-label">
                @Html.LabelFor(model => model.Dependent.VisaExpiration)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Dependent.VisaExpiration)
                @Html.ValidationMessageFor(model => model.Dependent.VisaExpiration)
            </div>

            <div class="editor-label">
                @Html.LabelFor(model => model.Dependent.VisaNumber)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Dependent.VisaNumber)
                @Html.ValidationMessageFor(model => model.Dependent.VisaNumber)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Dependent.CellPhone)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Dependent.CellPhone)
                @Html.ValidationMessageFor(model => model.Dependent.CellPhone)
            </div>
        </div>
    </fieldset>
    <input type="submit" value="Save" name="Save" />
    
   
   
